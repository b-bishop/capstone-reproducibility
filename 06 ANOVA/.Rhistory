labs(x="Group", y="Response Time (ms)")+
scale_x_discrete(breaks=c("control","experimental"),
labels=c("Control","Experimental"))+
theme(plot.title=element_text(size=15,
face="bold",
vjust=.5))+
theme(axis.title.x=element_text(size=12,
face="bold",
vjust=-.25))+
theme(axis.title.y=element_text(size=12,
face="bold",
vjust=.25))+
theme(axis.text.x=element_text(size=10,
face="bold",
color="black"))+
theme(axis.text.y=element_text(size=10,
face="bold",
color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),
axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())
f
t.test(dat$rt[dat$group=="control"],
dat$rt[dat$group=="experimental"],
var.equal=TRUE,
paired=TRUE)
t.test(dat$rt[dat$group=="control"],
dat$rt[dat$group=="experimental"],
var.equal=TRUE,
paired=TRUE)
dat<-read.csv("homework5.csv")
setwd("~/16 Spring/PSY 441 R/Capstone-Reproducibility/05 t-tests")
```{r}
str(dat)
```
dat<-read.csv("homework5.csv")
str(dat)
mean(dat$wpm[dat$group=="metal"])
mean(dat$wpm[dat$group=="none"])
mean(dat$wpm[dat$group=="metal"])
mean(dat$wpm[dat$group=="none"])
View(dat)
mean(dat$rt[dat$group=="none"])
mean(dat$rt[dat$group=="metal"])
dat<-read.csv("homework5.csv")
str(dat)
mean(dat$rt[dat$group=="metal"])
mean(dat$rt[dat$group=="none"])
mean(dat$wpm[dat$group=="metal"])
mean(dat$wpm[dat$group=="none"])
mean(dat$wpm[dat$group=="metal"])
mean(dat$wpm[dat$music=="metal"])
mean(dat$wpm[dat$musis=="none"])
mean(dat$wpm[dat$music=="metal"])
mean(dat$wpm[dat$music=="none"])
mean(dat$wpm[dat$music=="none"])
mean(dat$wpm[dat$music=="metal"])
t.test(dat$wpm[dat$music=="none"],
dat$rt[dat$group=="metal"],
var.equal=TRUE)
t.test(dat$rt[dat$group=="control"],
dat$rt[dat$group=="experimental"],
var.equal=TRUE)
t.test(dat$wpm[dat$music=="none"],
dat$rt[dat$group=="metal"],
var.equal=TRUE)
t.test(dat$wpm[dat$music=="none"],
dat$wpm[dat$group=="metal"],
var.equal=TRUE)
t.test(dat$wpm[dat$music=="none"],
dat$wpm[dat$music=="metal"],
var.equal=TRUE)
t.test(dat$wpm[dat$music=="none"],
dat$rwpm[dat$music=="metal"],
var.equal=TRUE,
alternative="greater")
t.test(dat$wpm[dat$music=="none"],
dat$wpm[dat$music=="metal"],
var.equal=TRUE,
alternative="greater")
t.test(dat$wpm[dat$music=="none"],
dat$wpm[dat$music=="metal"],
var.equal=TRUE,
alternative="greater")
t.test(dat$wpm[dat$music=="metal"],
dat$wpm[dat$music=="none"],
var.equal=TRUE,
alternative="greater")
t.test(dat$wpm[dat$music=="none"],
dat$wpm[dat$music=="metal"],
var.equal=TRUE,
alternative="less")
library(ggplot2)
library(gplots)
library(dplyr)
temp<-dat%>%music_by(music)%>%
summarize(means=mean(wpm), sems=sd(wpm)/sqrt(length(wpm)))
temp<-dat%>%group_by(music)%>%
summarize(means=mean(wpm), sems=sd(wpm)/sqrt(length(wpm)))
temp<-dat%>%group_by(music)%>%
summarize(means=mean(wpm), sems=sd(wpm)/sqrt(length(wpm)))
temp
f
f<-ggplot(temp,aes(x=factor(music),y=means))+
geom_bar(stat="identity", color="black",
fill=c("deepskyblue2", "deeppink"))+
geom_errorbar(aes(ymax=means+sems,
ymin=means-sems),
width=.2)+
f<-ggtitle("Words per Minute For the Groups")+
f<-labs(x="Group", y="WPM")+
f<-f+scale_x_discrete(breaks=c("none","music"),
labels=c("None","Music"))+
theme(plot.title=element_text(size=15,
face="bold",
vjust=.5))+
theme(axis.title.x=element_text(size=12,
face="bold",
vjust=-.25))+
theme(axis.title.y=element_text(size=12,
face="bold",
vjust=.25))+
theme(axis.text.x=element_text(size=10,
face="bold",
color="black"))+
theme(axis.text.y=element_text(size=10,
face="bold",
color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),
axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())
f
f<-ggplot(temp,aes(x=factor(music),y=means))+
geom_bar(stat="identity", color="black",
fill=c("deepskyblue2", "deeppink"))+
geom_errorbar(aes(ymax=means+sems,
ymin=means-sems),
width=.2)+
ggtitle("Words per Minute For the Groups")+
labs(x="Group", y="WPM")+
f<-f+scale_x_discrete(breaks=c("none","music"),
labels=c("None","Music"))+
theme(plot.title=element_text(size=15,
face="bold",
vjust=.5))+
theme(axis.title.x=element_text(size=12,
face="bold",
vjust=-.25))+
theme(axis.title.y=element_text(size=12,
face="bold",
vjust=.25))+
theme(axis.text.x=element_text(size=10,
face="bold",
color="black"))+
theme(axis.text.y=element_text(size=10,
face="bold",
color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),
axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())
f
f<-ggplot(temp,aes(x=factor(music),y=means))+
geom_bar(stat="identity", color="black",
fill=c("deepskyblue2", "deeppink"))+
geom_errorbar(aes(ymax=means+sems,
ymin=means-sems),
width=.2)+
ggtitle("Words per Minute For the Groups")+
labs(x="Group", y="WPM")+
scale_x_discrete(breaks=c("none","music"),
labels=c("None","Music"))+
theme(plot.title=element_text(size=15,
face="bold",
vjust=.5))+
theme(axis.title.x=element_text(size=12,
face="bold",
vjust=-.25))+
theme(axis.title.y=element_text(size=12,
face="bold",
vjust=.25))+
theme(axis.text.x=element_text(size=10,
face="bold",
color="black"))+
theme(axis.text.y=element_text(size=10,
face="bold",
color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),
axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())
f
f<-ggplot(temp,aes(x=factor(music),y=means))+
geom_bar(stat="identity", color="black",
fill=c("deepskyblue2", "deeppink"))+
geom_errorbar(aes(ymax=means+sems,
ymin=means-sems),
width=.2)+
ggtitle("Words per Minute For the Groups")+
labs(x="Music", y="WPM")+
scale_x_discrete(breaks=c("none","music"),
labels=c("None","Music"))+
theme(plot.title=element_text(size=15,
face="bold",
vjust=.5))+
theme(axis.title.x=element_text(size=12,
face="bold",
vjust=-.25))+
theme(axis.title.y=element_text(size=12,
face="bold",
vjust=.25))+
theme(axis.text.x=element_text(size=10,
face="bold",
color="black"))+
theme(axis.text.y=element_text(size=10,
face="bold",
color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),
axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())
f
t.test(dat$wpm[dat$music=="none"],
dat$wpm[dat$music=="metal"],
var.equal=TRUE,
paired=TRUE)
dat<-read.csv("homeowork4.csv")
dat<-read.csv("homework4.csv")
setwd("~/16 Spring/PSY 441 R/Capstone-Reproducibility/04 Chi-Square Tests")
dat<-read.csv("homework4.csv")
str(dat)
table(dat$condition, dat$agreement)
chisq.test(dat$condition,dat$agreement)
chisq.test(dat$major,dat$gender)
str(dat)
str(dat)
setwd("~/16 Spring/PSY 441 R/Capstone-Reproducibility/03 Working with R")
str(dat)
str(dat)
dat<-read.csv("example3.csv")
str(dat)
dat<-read.csv("homework3.csv")
str(dat)
setwd("~/16 Spring/PSY 441 R/Capstone-Reproducibility/06 ANOVA")
dat<-read.csv("homework6.csv")
str(dat)
library(ggplot2)
library(gplots)
library(dplyr)
'''
<!--
Read in the homework6.csv data. For each of the following steps you
should preface your R commands with some plain English explanation.
The fabricated data are supposed to approximate how people perform
in different types of visual searches. Specifically, we're
comparing performance in feature searches (e.g. looking for a red
X among green Xs) and conjunction searches (e.g. looking for a red
X among green Xs and red Os). We're also looking at how the number
of distractors within the search display effect our data.
-->
The first step is to read in the data.
```{r}
dat<-read.csv("homework6.csv")
library(ggplot2)
library(gplots)
library(dplyr)
library(ggplot2)
library(gplots)
library(dplyr)
dat<-read.csv("homework6.csv")
setwd("~/16 Spring/PSY 441 R/Capstone-Reproducibility/06 ANOVA")
dat<-read.csv("homework6.csv")
str(dat)
dat$distractors<-as.factor(dat$distractors)
dat$subject<-as.factor(dat$subject)
dat$subject2<-as.factor(dat$subject2)
temp<-dat[dat$distractor=="yes",]
summary(aov(percent~position, data=temp))
summary(aov(percent~distractors, data=temp))
summary(aov(percent~distractors, data=temp))
temp<-dat[dat$distractors=="yes",]
summary(aov(percent~distractors, data=temp))
dat<-read.csv("homework6.csv")
str(dat)
dat$distractors<-as.factor(dat$distractors)
dat$subject<-as.factor(dat$subject)
dat$subject2<-as.factor(dat$subject2)
temp<-dat[dat$distractors=="yes",]
summary(aov(percent~position, data=temp))
View(temp)
temp<-dat[dat$distractors=="yes",]
View(temp)
dat<-read.csv("example6.csv")
str(dat)
dat$position<-as.factor(dat$position)
dat$subject<-as.factor(dat$subject)
dat$subject2<-as.factor(dat$subject2)
temp<-dat[dat$distractor=="yes",]
View(dat)
dat<-read.csv("homework6.csv")
str(dat)
temp<-dat[dat$type=="yes",]
temp<-dat[dat$distractor=="yes",]
dat<-read.csv("homework6.csv")
str(dat)
dat$distractors<-as.factor(dat$distractors)
dat$subject<-as.factor(dat$subject)
dat$subject2<-as.factor(dat$subject2)
temp<-dat[dat$distractor=="yes",]
temp<-dat[dat$distractors=="yes",]
summary(aov(percent~position, data=temp))
summary(aov(percent~position, data=temp))
summary(aov(rt~type, data=temp))
temp<-dat[dat$distractors=="yes",]
temp<-dat[dat$type=="yes",]
summary(aov(rt~type, data=temp))
summary(aov(rt~distractors, data=temp))
str(dat)
str(dat)
str(dat)
dat<-read.csv("homework6.csv")
str(dat)
temp<-dat[dat$conjunction=="yes",]
summary(aov(rt~distractors, data=temp))
temp<-dat[dat$conjunction=="yes",]
View(temp)
View(dat)
setwd("~/16 Spring/PSY 441 R/Capstone-Reproducibility/06 ANOVA")
dat<-read.csv("homework6.csv")
str(dat)
temp<-dat[dat$distractor=="yes",]
summary(aov(percent~position, data=temp))
View(temp)
View(dat)
temp<-dat[dat$distractor=="yes",]
temp<-dat[dat$conjunction=="distractors,]
View(temp)
View(temp)
View(temp)
View(dat)
setwd("~/16 Spring/PSY 441 R/Capstone-Reproducibility/06 ANOVA")
dat<-read.csv("example6.csv")
setwd("~/16 Spring/PSY 441 R/Capstone-Reproducibility/06 ANOVA")
str(dat)
dat$position<-as.factor(dat$position)
dat$subject<-as.factor(dat$subject)
dat$subject2<-as.factor(dat$subject2)
temp<-dat[dat$distractor=="yes",]
summary(aov(percent~position, data=temp))
library(ggplot2)
library(gplots)
library(dplyr)
temp<-temp%>%group_by(position)%>%
summarize(means=mean(percent),
sems=sd(percent)/sqrt(length(percent)))
f<-ggplot(temp, aes(x=as.factor(position),
y=means,
group=1))+
geom_line(size=1)+
geom_point(size=2)+
geom_errorbar(aes(ymax=means+sems,
ymin=means-sems),
width=.2)+
ggtitle("Serial Position Effect")+
labs(x="List Position",y="Percent Recalled")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())
f
temp<-dat[dat$distractor=="yes",]
summary(aov(percent~position+
Error(subject/position),data=temp))
summary(aov(percent~position*distractor, data=dat))
temp<-dat%>%group_by(position,distractor)%>%
summarize(means=mean(percent),
sems=sd(percent)/sqrt(length(n)))
f<-ggplot(temp, aes(x=position,
y=means,
group=distractor,
color=distractor))+
geom_line(size=1)+
geom_point(size=2)+
scale_color_manual(values=c("darkgreen","red"),
name="Distractor",
breaks=c("no","yes"),
labels=c("No", "Yes"))+
geom_errorbar(aes(ymax=means+sems, ymin=means-sems),width=.2)+
ggtitle("Serial Position With and Without Distraction")+
labs(x="List Position",y="Percent Recalled")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())+
theme(legend.position=c(.4,.76))+
theme(legend.background=element_blank())+
theme(legend.background=element_rect(color="black"))+
theme(legend.title=element_blank())+
theme(legend.title=element_text(size=12))+
theme(legend.title.align=.5)+
theme(legend.text=element_text(size=10,face="bold"))
f
f<-ggplot(temp, aes(x=position,
y=means,
fill=distractor))+
geom_bar(stat="identity",position=position_dodge())+
scale_fill_manual(values=c("darkgreen","red"),
name="Distractor",
breaks=c("no","yes"),
labels=c("No", "Yes"))+
geom_errorbar(aes(ymax=means+sems,
ymin=means-sems),
width=.2,
position=position_dodge(.9))+
ggtitle("Serial Position With and Without Distraction")+
labs(x="List Position",y="Percent Recalled")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
coord_cartesian(ylim=c(min(temp$means)-2*max(temp$sems),
max(temp$means)+2*max(temp$sems)))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())+
theme(legend.position=c(.4,.76))+
theme(legend.background=element_blank())+
theme(legend.background=element_rect(color="black"))+
theme(legend.title=element_blank())+
theme(legend.title=element_text(size=12))+
theme(legend.title.align=.5)+
theme(legend.text=element_text(size=10,face="bold"))
f
summary(aov(percent~position*distractor+
Error(subject/(position*distractor)),
data=dat))
summary(aov(percent~position*distractor+
Error(subject2/position),
data=dat))
dat<-read.csv("homework6.csv")
setwd("~/16 Spring/PSY 441 R/Capstone-Reproducibility/06 ANOVA")
str(dat)
temp<-dat[dat$distractor=="conjunction",]
temp<-dat[dat$conjunction=="distractor",]
View(dat)
temp<-dat[dat$distractor=="conjunction",]
temp<-dat[dat$distractor=="4,8,12",]
temp<-dat[dat$type==distractors,]
temp<-dat[dat$type==conjunctions,]
temp<-dat[dat$distactors=="conjunctions",]
View(temp)
temp<-dat[dat$type==conjunction,]
View(dat)
temp<-dat[dat$type==conjunction,]
View(dat)
dat$position<-as.factor(dat$position)
dat$subject<-as.factor(dat$subject)
dat$subject2<-as.factor(dat$subject2)
dat$distractors<-as.factor(dat$distractors)
dat$subject<-as.factor(dat$subject)
dat$subject2<-as.factor(dat$subject2)
temp<-dat[dat$type==conjunction,]
View(dat)
dat<-read.csv("homework6.csv")
setwd("~/16 Spring/PSY 441 R/Capstone-Reproducibility/06 ANOVA")
str(dat)
dat$distractors<-as.factor(dat$distractors)
dat$subject<-as.factor(dat$subject)
dat$subject2<-as.factor(dat$subject2)
temp<-dat[dat$type==conjunction,]
temp<-dat[dat$conjunction,]
summary(aov(rt~distractors, data=temp))
summary(aov(distractors~numbers, data=temp))
summary(aov(distractors~rt, data=temp))
summary(aov(rt~distractors, data=temp))
summary(aov(type~distractors, data=temp))
summary(aov(distractors~rt, data=temp))
View(temp)
temp<-dat[dat$conjunction,]
